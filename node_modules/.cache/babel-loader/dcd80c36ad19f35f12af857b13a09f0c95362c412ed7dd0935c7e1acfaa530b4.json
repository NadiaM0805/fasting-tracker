{"ast":null,"code":"import _objectSpread from\"/Users/nadiamorris/Desktop/cursor projects/diet app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function StreakTracker(){const[streakData,setStreakData]=useState(()=>{const saved=localStorage.getItem('streakData');return saved?JSON.parse(saved):{currentStreak:0,longestStreak:0,lastWorkoutDate:null,workoutDates:[]};});useEffect(()=>{// Update streak when component mounts\nupdateStreak();},[]);const updateStreak=()=>{const today=new Date().toISOString().split('T')[0];const lastWorkout=streakData.lastWorkoutDate;if(!lastWorkout)return;const lastWorkoutDate=new Date(lastWorkout);const currentDate=new Date();const diffTime=Math.abs(currentDate-lastWorkoutDate);const diffDays=Math.ceil(diffTime/(1000*60*60*24));// If more than 1 day has passed, reset streak\nif(diffDays>1){setStreakData(prev=>_objectSpread(_objectSpread({},prev),{},{currentStreak:0}));}};// Call this function when a workout is completed\nconst recordWorkout=()=>{const today=new Date().toISOString().split('T')[0];// Don't record multiple workouts on the same day\nif(streakData.workoutDates.includes(today))return;const newStreak=streakData.lastWorkoutDate===yesterday()?streakData.currentStreak+1:1;const newStreakData={currentStreak:newStreak,longestStreak:Math.max(newStreak,streakData.longestStreak),lastWorkoutDate:today,workoutDates:[...streakData.workoutDates,today]};setStreakData(newStreakData);localStorage.setItem('streakData',JSON.stringify(newStreakData));};const yesterday=()=>{const date=new Date();date.setDate(date.getDate()-1);return date.toISOString().split('T')[0];};const getLastWorkoutText=()=>{if(!streakData.lastWorkoutDate)return'No workouts recorded';const lastWorkout=new Date(streakData.lastWorkoutDate);const today=new Date();const diffTime=Math.abs(today-lastWorkout);const diffDays=Math.ceil(diffTime/(1000*60*60*24));if(diffDays===0)return'Last workout: Today';if(diffDays===1)return'Last workout: Yesterday';return\"Last workout: \".concat(diffDays,\" days ago\");};return/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-xl shadow-lg p-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 md:grid-cols-3 gap-6 text-center\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"bg-blue-50 rounded-lg p-4\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-4xl font-bold text-blue-500 mb-2\",children:streakData.currentStreak}),/*#__PURE__*/_jsx(\"div\",{className:\"text-sm text-gray-600\",children:\"Current Streak \\uD83D\\uDD25\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-purple-50 rounded-lg p-4\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-4xl font-bold text-purple-500 mb-2\",children:streakData.longestStreak}),/*#__PURE__*/_jsx(\"div\",{className:\"text-sm text-gray-600\",children:\"Longest Streak \\uD83C\\uDFC6\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-green-50 rounded-lg p-4\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-4xl font-bold text-green-500 mb-2\",children:streakData.workoutDates.length}),/*#__PURE__*/_jsx(\"div\",{className:\"text-sm text-gray-600\",children:\"Total Workouts \\uD83D\\uDCAA\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"mt-6 text-center text-gray-600\",children:getLastWorkoutText()})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-xl shadow-lg p-6\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-bold mb-4\",children:\"Workout Calendar\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-7 gap-2\",children:[['Sun','Mon','Tue','Wed','Thu','Fri','Sat'].map(day=>/*#__PURE__*/_jsx(\"div\",{className:\"text-center text-sm font-medium text-gray-500\",children:day},day)),generateCalendarDays().map((day,index)=>/*#__PURE__*/_jsx(\"div\",{className:\"aspect-square rounded-lg flex items-center justify-center text-sm \".concat(day.isCurrentMonth?streakData.workoutDates.includes(day.date)?'bg-green-500 text-white':'bg-gray-100':'bg-gray-50 text-gray-400'),children:day.dayOfMonth},index))]})]})]});}function generateCalendarDays(){const today=new Date();const firstDay=new Date(today.getFullYear(),today.getMonth(),1);const lastDay=new Date(today.getFullYear(),today.getMonth()+1,0);const days=[];// Add days from previous month\nconst firstDayOfWeek=firstDay.getDay();for(let i=firstDayOfWeek-1;i>=0;i--){const date=new Date(firstDay);date.setDate(-i);days.push({date:date.toISOString().split('T')[0],dayOfMonth:date.getDate(),isCurrentMonth:false});}// Add days of current month\nfor(let i=1;i<=lastDay.getDate();i++){const date=new Date(today.getFullYear(),today.getMonth(),i);days.push({date:date.toISOString().split('T')[0],dayOfMonth:i,isCurrentMonth:true});}// Add days from next month\nconst remainingDays=42-days.length;// 6 rows × 7 days\nfor(let i=1;i<=remainingDays;i++){const date=new Date(lastDay);date.setDate(lastDay.getDate()+i);days.push({date:date.toISOString().split('T')[0],dayOfMonth:date.getDate(),isCurrentMonth:false});}return days;}","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","StreakTracker","streakData","setStreakData","saved","localStorage","getItem","JSON","parse","currentStreak","longestStreak","lastWorkoutDate","workoutDates","updateStreak","today","Date","toISOString","split","lastWorkout","currentDate","diffTime","Math","abs","diffDays","ceil","prev","_objectSpread","recordWorkout","includes","newStreak","yesterday","newStreakData","max","setItem","stringify","date","setDate","getDate","getLastWorkoutText","concat","className","children","length","map","day","generateCalendarDays","index","isCurrentMonth","dayOfMonth","firstDay","getFullYear","getMonth","lastDay","days","firstDayOfWeek","getDay","i","push","remainingDays"],"sources":["/Users/nadiamorris/Desktop/cursor projects/diet app/src/components/StreakTracker.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nexport default function StreakTracker() {\n  const [streakData, setStreakData] = useState(() => {\n    const saved = localStorage.getItem('streakData');\n    return saved ? JSON.parse(saved) : {\n      currentStreak: 0,\n      longestStreak: 0,\n      lastWorkoutDate: null,\n      workoutDates: []\n    };\n  });\n\n  useEffect(() => {\n    // Update streak when component mounts\n    updateStreak();\n  }, []);\n\n  const updateStreak = () => {\n    const today = new Date().toISOString().split('T')[0];\n    const lastWorkout = streakData.lastWorkoutDate;\n    \n    if (!lastWorkout) return;\n\n    const lastWorkoutDate = new Date(lastWorkout);\n    const currentDate = new Date();\n    const diffTime = Math.abs(currentDate - lastWorkoutDate);\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n\n    // If more than 1 day has passed, reset streak\n    if (diffDays > 1) {\n      setStreakData(prev => ({\n        ...prev,\n        currentStreak: 0\n      }));\n    }\n  };\n\n  // Call this function when a workout is completed\n  const recordWorkout = () => {\n    const today = new Date().toISOString().split('T')[0];\n    \n    // Don't record multiple workouts on the same day\n    if (streakData.workoutDates.includes(today)) return;\n\n    const newStreak = streakData.lastWorkoutDate === yesterday() \n      ? streakData.currentStreak + 1 \n      : 1;\n\n    const newStreakData = {\n      currentStreak: newStreak,\n      longestStreak: Math.max(newStreak, streakData.longestStreak),\n      lastWorkoutDate: today,\n      workoutDates: [...streakData.workoutDates, today]\n    };\n\n    setStreakData(newStreakData);\n    localStorage.setItem('streakData', JSON.stringify(newStreakData));\n  };\n\n  const yesterday = () => {\n    const date = new Date();\n    date.setDate(date.getDate() - 1);\n    return date.toISOString().split('T')[0];\n  };\n\n  const getLastWorkoutText = () => {\n    if (!streakData.lastWorkoutDate) return 'No workouts recorded';\n    \n    const lastWorkout = new Date(streakData.lastWorkoutDate);\n    const today = new Date();\n    const diffTime = Math.abs(today - lastWorkout);\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n\n    if (diffDays === 0) return 'Last workout: Today';\n    if (diffDays === 1) return 'Last workout: Yesterday';\n    return `Last workout: ${diffDays} days ago`;\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"bg-white rounded-xl shadow-lg p-6\">\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 text-center\">\n          <div className=\"bg-blue-50 rounded-lg p-4\">\n            <div className=\"text-4xl font-bold text-blue-500 mb-2\">\n              {streakData.currentStreak}\n            </div>\n            <div className=\"text-sm text-gray-600\">Current Streak 🔥</div>\n          </div>\n\n          <div className=\"bg-purple-50 rounded-lg p-4\">\n            <div className=\"text-4xl font-bold text-purple-500 mb-2\">\n              {streakData.longestStreak}\n            </div>\n            <div className=\"text-sm text-gray-600\">Longest Streak 🏆</div>\n          </div>\n\n          <div className=\"bg-green-50 rounded-lg p-4\">\n            <div className=\"text-4xl font-bold text-green-500 mb-2\">\n              {streakData.workoutDates.length}\n            </div>\n            <div className=\"text-sm text-gray-600\">Total Workouts 💪</div>\n          </div>\n        </div>\n\n        <div className=\"mt-6 text-center text-gray-600\">\n          {getLastWorkoutText()}\n        </div>\n      </div>\n\n      {/* Monthly Calendar View */}\n      <div className=\"bg-white rounded-xl shadow-lg p-6\">\n        <h2 className=\"text-xl font-bold mb-4\">Workout Calendar</h2>\n        <div className=\"grid grid-cols-7 gap-2\">\n          {['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'].map(day => (\n            <div key={day} className=\"text-center text-sm font-medium text-gray-500\">\n              {day}\n            </div>\n          ))}\n          {generateCalendarDays().map((day, index) => (\n            <div\n              key={index}\n              className={`aspect-square rounded-lg flex items-center justify-center text-sm ${\n                day.isCurrentMonth\n                  ? streakData.workoutDates.includes(day.date)\n                    ? 'bg-green-500 text-white'\n                    : 'bg-gray-100'\n                  : 'bg-gray-50 text-gray-400'\n              }`}\n            >\n              {day.dayOfMonth}\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction generateCalendarDays() {\n  const today = new Date();\n  const firstDay = new Date(today.getFullYear(), today.getMonth(), 1);\n  const lastDay = new Date(today.getFullYear(), today.getMonth() + 1, 0);\n  \n  const days = [];\n  \n  // Add days from previous month\n  const firstDayOfWeek = firstDay.getDay();\n  for (let i = firstDayOfWeek - 1; i >= 0; i--) {\n    const date = new Date(firstDay);\n    date.setDate(-i);\n    days.push({\n      date: date.toISOString().split('T')[0],\n      dayOfMonth: date.getDate(),\n      isCurrentMonth: false\n    });\n  }\n  \n  // Add days of current month\n  for (let i = 1; i <= lastDay.getDate(); i++) {\n    const date = new Date(today.getFullYear(), today.getMonth(), i);\n    days.push({\n      date: date.toISOString().split('T')[0],\n      dayOfMonth: i,\n      isCurrentMonth: true\n    });\n  }\n  \n  // Add days from next month\n  const remainingDays = 42 - days.length; // 6 rows × 7 days\n  for (let i = 1; i <= remainingDays; i++) {\n    const date = new Date(lastDay);\n    date.setDate(lastDay.getDate() + i);\n    days.push({\n      date: date.toISOString().split('T')[0],\n      dayOfMonth: date.getDate(),\n      isCurrentMonth: false\n    });\n  }\n  \n  return days;\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}