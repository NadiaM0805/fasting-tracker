{"ast":null,"code":"var _jsxFileName = \"/Users/nadiamorris/Desktop/cursor projects/diet app/src/components/PilatesLogger.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PilatesLogger = () => {\n  _s();\n  const [logs, setLogs] = useState({});\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  useEffect(() => {\n    const savedLogs = localStorage.getItem('pilatesLogs');\n    if (savedLogs) {\n      setLogs(JSON.parse(savedLogs));\n    }\n  }, []);\n  const saveToLocalStorage = newLogs => {\n    localStorage.setItem('pilatesLogs', JSON.stringify(newLogs));\n    setLogs(newLogs);\n  };\n  const toggleLog = date => {\n    const dateStr = date.toISOString().split('T')[0];\n    const newLogs = {\n      ...logs\n    };\n    newLogs[dateStr] = !logs[dateStr];\n    saveToLocalStorage(newLogs);\n  };\n  const getDaysInMonth = date => {\n    const year = date.getFullYear();\n    const month = date.getMonth();\n    const daysInMonth = new Date(year, month + 1, 0).getDate();\n    return Array.from({\n      length: daysInMonth\n    }, (_, i) => new Date(year, month, i + 1));\n  };\n  const formatDate = date => {\n    return date.toLocaleDateString('en-US', {\n      month: 'short',\n      day: 'numeric'\n    });\n  };\n  const changeMonth = offset => {\n    const newDate = new Date(selectedDate);\n    newDate.setMonth(newDate.getMonth() + offset);\n    setSelectedDate(newDate);\n  };\n  const isToday = date => {\n    const today = new Date();\n    return date.toISOString().split('T')[0] === today.toISOString().split('T')[0];\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-4xl mx-auto p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold text-center mb-6\",\n      children: \"Reformer Pilates Logger\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between items-center mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => changeMonth(-1),\n        className: \"px-4 py-2 bg-gray-200 rounded hover:bg-gray-300\",\n        children: \"Previous Month\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-xl font-semibold\",\n        children: selectedDate.toLocaleDateString('en-US', {\n          month: 'long',\n          year: 'numeric'\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => changeMonth(1),\n        className: \"px-4 py-2 bg-gray-200 rounded hover:bg-gray-300\",\n        children: \"Next Month\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-7 gap-2\",\n      children: [['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'].map(day => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center font-semibold p-2\",\n        children: day\n      }, day, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)), Array.from({\n        length: new Date(selectedDate.getFullYear(), selectedDate.getMonth(), 1).getDay()\n      }).map((_, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-2\"\n      }, `empty-${i}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)), getDaysInMonth(selectedDate).map(date => {\n        const dateStr = date.toISOString().split('T')[0];\n        const completed = logs[dateStr];\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => toggleLog(date),\n          className: `p-2 border rounded cursor-pointer transition-colors ${isToday(date) ? 'border-blue-500' : 'border-gray-200'} ${completed ? 'bg-green-100 hover:bg-green-200' : 'bg-white hover:bg-gray-100'}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-sm\",\n            children: date.getDate()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this), completed && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-xs text-green-600 mt-1\",\n            children: \"\\u2713 Done\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 17\n          }, this)]\n        }, dateStr, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-8 p-4 bg-white rounded-lg shadow\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-semibold mb-4\",\n        children: \"Quick Log for Today\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => toggleLog(new Date()),\n        className: `w-full py-3 rounded-lg transition-colors ${logs[new Date().toISOString().split('T')[0]] ? 'bg-green-500 text-white hover:bg-green-600' : 'bg-gray-200 hover:bg-gray-300'}`,\n        children: logs[new Date().toISOString().split('T')[0]] ? 'âœ“ Completed Today' : 'Log Today\\'s Session'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(PilatesLogger, \"d4W95PG2T0qYYNkE6xSXGda5Jso=\");\n_c = PilatesLogger;\nexport default PilatesLogger;\nvar _c;\n$RefreshReg$(_c, \"PilatesLogger\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","PilatesLogger","_s","logs","setLogs","selectedDate","setSelectedDate","Date","savedLogs","localStorage","getItem","JSON","parse","saveToLocalStorage","newLogs","setItem","stringify","toggleLog","date","dateStr","toISOString","split","getDaysInMonth","year","getFullYear","month","getMonth","daysInMonth","getDate","Array","from","length","_","i","formatDate","toLocaleDateString","day","changeMonth","offset","newDate","setMonth","isToday","today","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","getDay","completed","_c","$RefreshReg$"],"sources":["/Users/nadiamorris/Desktop/cursor projects/diet app/src/components/PilatesLogger.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst PilatesLogger = () => {\n  const [logs, setLogs] = useState({});\n  const [selectedDate, setSelectedDate] = useState(new Date());\n\n  useEffect(() => {\n    const savedLogs = localStorage.getItem('pilatesLogs');\n    if (savedLogs) {\n      setLogs(JSON.parse(savedLogs));\n    }\n  }, []);\n\n  const saveToLocalStorage = (newLogs) => {\n    localStorage.setItem('pilatesLogs', JSON.stringify(newLogs));\n    setLogs(newLogs);\n  };\n\n  const toggleLog = (date) => {\n    const dateStr = date.toISOString().split('T')[0];\n    const newLogs = { ...logs };\n    newLogs[dateStr] = !logs[dateStr];\n    saveToLocalStorage(newLogs);\n  };\n\n  const getDaysInMonth = (date) => {\n    const year = date.getFullYear();\n    const month = date.getMonth();\n    const daysInMonth = new Date(year, month + 1, 0).getDate();\n    return Array.from({ length: daysInMonth }, (_, i) => new Date(year, month, i + 1));\n  };\n\n  const formatDate = (date) => {\n    return date.toLocaleDateString('en-US', { month: 'short', day: 'numeric' });\n  };\n\n  const changeMonth = (offset) => {\n    const newDate = new Date(selectedDate);\n    newDate.setMonth(newDate.getMonth() + offset);\n    setSelectedDate(newDate);\n  };\n\n  const isToday = (date) => {\n    const today = new Date();\n    return date.toISOString().split('T')[0] === today.toISOString().split('T')[0];\n  };\n\n  return (\n    <div className=\"max-w-4xl mx-auto p-4\">\n      <h2 className=\"text-2xl font-bold text-center mb-6\">Reformer Pilates Logger</h2>\n      \n      {/* Month Navigation */}\n      <div className=\"flex justify-between items-center mb-6\">\n        <button\n          onClick={() => changeMonth(-1)}\n          className=\"px-4 py-2 bg-gray-200 rounded hover:bg-gray-300\"\n        >\n          Previous Month\n        </button>\n        <h3 className=\"text-xl font-semibold\">\n          {selectedDate.toLocaleDateString('en-US', { month: 'long', year: 'numeric' })}\n        </h3>\n        <button\n          onClick={() => changeMonth(1)}\n          className=\"px-4 py-2 bg-gray-200 rounded hover:bg-gray-300\"\n        >\n          Next Month\n        </button>\n      </div>\n\n      {/* Calendar Grid */}\n      <div className=\"grid grid-cols-7 gap-2\">\n        {['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'].map(day => (\n          <div key={day} className=\"text-center font-semibold p-2\">\n            {day}\n          </div>\n        ))}\n        \n        {/* Empty cells for days before the 1st */}\n        {Array.from({ length: new Date(selectedDate.getFullYear(), selectedDate.getMonth(), 1).getDay() }).map((_, i) => (\n          <div key={`empty-${i}`} className=\"p-2\"></div>\n        ))}\n\n        {/* Calendar days */}\n        {getDaysInMonth(selectedDate).map(date => {\n          const dateStr = date.toISOString().split('T')[0];\n          const completed = logs[dateStr];\n          \n          return (\n            <div\n              key={dateStr}\n              onClick={() => toggleLog(date)}\n              className={`p-2 border rounded cursor-pointer transition-colors ${\n                isToday(date) ? 'border-blue-500' : 'border-gray-200'\n              } ${\n                completed\n                  ? 'bg-green-100 hover:bg-green-200'\n                  : 'bg-white hover:bg-gray-100'\n              }`}\n            >\n              <div className=\"text-sm\">{date.getDate()}</div>\n              {completed && (\n                <div className=\"text-xs text-green-600 mt-1\">âœ“ Done</div>\n              )}\n            </div>\n          );\n        })}\n      </div>\n\n      {/* Today's Quick Log */}\n      <div className=\"mt-8 p-4 bg-white rounded-lg shadow\">\n        <h3 className=\"text-lg font-semibold mb-4\">Quick Log for Today</h3>\n        <button\n          onClick={() => toggleLog(new Date())}\n          className={`w-full py-3 rounded-lg transition-colors ${\n            logs[new Date().toISOString().split('T')[0]]\n              ? 'bg-green-500 text-white hover:bg-green-600'\n              : 'bg-gray-200 hover:bg-gray-300'\n          }`}\n        >\n          {logs[new Date().toISOString().split('T')[0]]\n            ? 'âœ“ Completed Today'\n            : 'Log Today\\'s Session'}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default PilatesLogger; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC,CAAC;EACpC,MAAM,CAACQ,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,IAAIU,IAAI,CAAC,CAAC,CAAC;EAE5DT,SAAS,CAAC,MAAM;IACd,MAAMU,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;IACrD,IAAIF,SAAS,EAAE;MACbJ,OAAO,CAACO,IAAI,CAACC,KAAK,CAACJ,SAAS,CAAC,CAAC;IAChC;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,kBAAkB,GAAIC,OAAO,IAAK;IACtCL,YAAY,CAACM,OAAO,CAAC,aAAa,EAAEJ,IAAI,CAACK,SAAS,CAACF,OAAO,CAAC,CAAC;IAC5DV,OAAO,CAACU,OAAO,CAAC;EAClB,CAAC;EAED,MAAMG,SAAS,GAAIC,IAAI,IAAK;IAC1B,MAAMC,OAAO,GAAGD,IAAI,CAACE,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAChD,MAAMP,OAAO,GAAG;MAAE,GAAGX;IAAK,CAAC;IAC3BW,OAAO,CAACK,OAAO,CAAC,GAAG,CAAChB,IAAI,CAACgB,OAAO,CAAC;IACjCN,kBAAkB,CAACC,OAAO,CAAC;EAC7B,CAAC;EAED,MAAMQ,cAAc,GAAIJ,IAAI,IAAK;IAC/B,MAAMK,IAAI,GAAGL,IAAI,CAACM,WAAW,CAAC,CAAC;IAC/B,MAAMC,KAAK,GAAGP,IAAI,CAACQ,QAAQ,CAAC,CAAC;IAC7B,MAAMC,WAAW,GAAG,IAAIpB,IAAI,CAACgB,IAAI,EAAEE,KAAK,GAAG,CAAC,EAAE,CAAC,CAAC,CAACG,OAAO,CAAC,CAAC;IAC1D,OAAOC,KAAK,CAACC,IAAI,CAAC;MAAEC,MAAM,EAAEJ;IAAY,CAAC,EAAE,CAACK,CAAC,EAAEC,CAAC,KAAK,IAAI1B,IAAI,CAACgB,IAAI,EAAEE,KAAK,EAAEQ,CAAC,GAAG,CAAC,CAAC,CAAC;EACpF,CAAC;EAED,MAAMC,UAAU,GAAIhB,IAAI,IAAK;IAC3B,OAAOA,IAAI,CAACiB,kBAAkB,CAAC,OAAO,EAAE;MAAEV,KAAK,EAAE,OAAO;MAAEW,GAAG,EAAE;IAAU,CAAC,CAAC;EAC7E,CAAC;EAED,MAAMC,WAAW,GAAIC,MAAM,IAAK;IAC9B,MAAMC,OAAO,GAAG,IAAIhC,IAAI,CAACF,YAAY,CAAC;IACtCkC,OAAO,CAACC,QAAQ,CAACD,OAAO,CAACb,QAAQ,CAAC,CAAC,GAAGY,MAAM,CAAC;IAC7ChC,eAAe,CAACiC,OAAO,CAAC;EAC1B,CAAC;EAED,MAAME,OAAO,GAAIvB,IAAI,IAAK;IACxB,MAAMwB,KAAK,GAAG,IAAInC,IAAI,CAAC,CAAC;IACxB,OAAOW,IAAI,CAACE,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAKqB,KAAK,CAACtB,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EAC/E,CAAC;EAED,oBACErB,OAAA;IAAK2C,SAAS,EAAC,uBAAuB;IAAAC,QAAA,gBACpC5C,OAAA;MAAI2C,SAAS,EAAC,qCAAqC;MAAAC,QAAA,EAAC;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAGhFhD,OAAA;MAAK2C,SAAS,EAAC,wCAAwC;MAAAC,QAAA,gBACrD5C,OAAA;QACEiD,OAAO,EAAEA,CAAA,KAAMZ,WAAW,CAAC,CAAC,CAAC,CAAE;QAC/BM,SAAS,EAAC,iDAAiD;QAAAC,QAAA,EAC5D;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACThD,OAAA;QAAI2C,SAAS,EAAC,uBAAuB;QAAAC,QAAA,EAClCvC,YAAY,CAAC8B,kBAAkB,CAAC,OAAO,EAAE;UAAEV,KAAK,EAAE,MAAM;UAAEF,IAAI,EAAE;QAAU,CAAC;MAAC;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3E,CAAC,eACLhD,OAAA;QACEiD,OAAO,EAAEA,CAAA,KAAMZ,WAAW,CAAC,CAAC,CAAE;QAC9BM,SAAS,EAAC,iDAAiD;QAAAC,QAAA,EAC5D;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAGNhD,OAAA;MAAK2C,SAAS,EAAC,wBAAwB;MAAAC,QAAA,GACpC,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAACM,GAAG,CAACd,GAAG,iBACxDpC,OAAA;QAAe2C,SAAS,EAAC,+BAA+B;QAAAC,QAAA,EACrDR;MAAG,GADIA,GAAG;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAER,CACN,CAAC,EAGDnB,KAAK,CAACC,IAAI,CAAC;QAAEC,MAAM,EAAE,IAAIxB,IAAI,CAACF,YAAY,CAACmB,WAAW,CAAC,CAAC,EAAEnB,YAAY,CAACqB,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAACyB,MAAM,CAAC;MAAE,CAAC,CAAC,CAACD,GAAG,CAAC,CAAClB,CAAC,EAAEC,CAAC,kBAC1GjC,OAAA;QAAwB2C,SAAS,EAAC;MAAK,GAA7B,SAASV,CAAC,EAAE;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAuB,CAC9C,CAAC,EAGD1B,cAAc,CAACjB,YAAY,CAAC,CAAC6C,GAAG,CAAChC,IAAI,IAAI;QACxC,MAAMC,OAAO,GAAGD,IAAI,CAACE,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QAChD,MAAM+B,SAAS,GAAGjD,IAAI,CAACgB,OAAO,CAAC;QAE/B,oBACEnB,OAAA;UAEEiD,OAAO,EAAEA,CAAA,KAAMhC,SAAS,CAACC,IAAI,CAAE;UAC/ByB,SAAS,EAAE,uDACTF,OAAO,CAACvB,IAAI,CAAC,GAAG,iBAAiB,GAAG,iBAAiB,IAErDkC,SAAS,GACL,iCAAiC,GACjC,4BAA4B,EAC/B;UAAAR,QAAA,gBAEH5C,OAAA;YAAK2C,SAAS,EAAC,SAAS;YAAAC,QAAA,EAAE1B,IAAI,CAACU,OAAO,CAAC;UAAC;YAAAiB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,EAC9CI,SAAS,iBACRpD,OAAA;YAAK2C,SAAS,EAAC,6BAA6B;YAAAC,QAAA,EAAC;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CACzD;QAAA,GAbI7B,OAAO;UAAA0B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAcT,CAAC;MAEV,CAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAGNhD,OAAA;MAAK2C,SAAS,EAAC,qCAAqC;MAAAC,QAAA,gBAClD5C,OAAA;QAAI2C,SAAS,EAAC,4BAA4B;QAAAC,QAAA,EAAC;MAAmB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACnEhD,OAAA;QACEiD,OAAO,EAAEA,CAAA,KAAMhC,SAAS,CAAC,IAAIV,IAAI,CAAC,CAAC,CAAE;QACrCoC,SAAS,EAAE,4CACTxC,IAAI,CAAC,IAAII,IAAI,CAAC,CAAC,CAACa,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GACxC,4CAA4C,GAC5C,+BAA+B,EAClC;QAAAuB,QAAA,EAEFzC,IAAI,CAAC,IAAII,IAAI,CAAC,CAAC,CAACa,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GACzC,mBAAmB,GACnB;MAAsB;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC9C,EAAA,CA7HID,aAAa;AAAAoD,EAAA,GAAbpD,aAAa;AA+HnB,eAAeA,aAAa;AAAC,IAAAoD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}